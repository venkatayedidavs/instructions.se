name: Instructions.se Deployment

on:
  workflow_dispatch:
  workflow_call:

env:
  PROJECT_ID: venkatayedidasv
  REGION: europe-west4
  IMAGE_NAME: instructions-se
  REPOSITORY: instructions-se
  SERVICE_NAME: instructions-se
  
jobs:
  instructions-se-deployment:
    name: Instructions.se Deployment
    runs-on: 'ubuntu-latest'
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Set IMAGE variable
        run: |
          echo "IMAGE=${{ vars.CLOUDRUN_ARTIFACTORY_ZONE }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WIF }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker ${{ vars.CLOUDRUN_ARTIFACTORY_ZONE }} --quiet 

      - name: Build Docker image
        run: |
          docker build -t $IMAGE:latest . --no-cache

      # Run Trivy security scan on local image
      - name: Trivy Scan (fail on critical vulnerabilities only)
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DISABLE_VEX_NOTICE: true
        with:
          image-ref: ${{ env.IMAGE }}:latest
          format: table
          severity: CRITICAL
          exit-code: 1
          ignore-unfixed: true
          trivyignores: .trivyignore

      - name: Push Docker image
        run: |
          docker push $IMAGE:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{vars.CLOUDRUN_ARTIFACTORY_ZONE}}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
